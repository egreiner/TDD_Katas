2020.12.14 Mo (Post-HardLockdown day 8 in AT)
=============================================

- Agility Kata “Viewing CSV Files III” resume
    https://ccd-school.de/coding-dojo/agility-katas/viewing-csv-files-iii/

- cache purge strategy?
- make some enhancements
- get rid of old not used components 





















2020.12.13 Su (Post-HardLockdown day 7 in AT)
=============================================

- Agility Kata “Viewing CSV Files III” resume
    https://ccd-school.de/coding-dojo/agility-katas/viewing-csv-files-iii/

- fix bugs                                                                  DONE
    we have a problem with the first cache page due to the title line
    we do not have the title in the following cache-pages
    so Test-After...



- fix the tests that we ignored unfortunately                               DONE
- cache purge strategy?
- make some enhancements
- get rid of old not used components 













2020.12.11 Fr (Post-HardLockdown day 5 in AT)
=============================================

This weekend there are corona mass tests in my area!

- Agility Kata “Viewing CSV Files III” resume
    https://ccd-school.de/coding-dojo/agility-katas/viewing-csv-files-iii/

So bulk tests do work really well and it also was done really fast
but we have to clean up

- fix bugs
    we have a problem with the first cache page due to the title line
    we do not have the title in the following cache-pages
    so Test-After...



- fix the tests that we ignored unfortunately
- cache purge strategy?
- make some enhancements
- get rid of old not used components 

















2020.12.10 Th (Post-HardLockdown day 4 in AT)
=============================================

now SoftLockdown
... doesn't help


- Agility Kata “Viewing CSV Files III” resume
    https://ccd-school.de/coding-dojo/agility-katas/viewing-csv-files-iii/

BulkRead
    works realy fine, better than i thougth

    some bugs                               DONE
























2020.12.09 We (Post-Lockdown day 3 in AT)
=========================================

- Agility Kata “Viewing CSV Files III” resume
    https://ccd-school.de/coding-dojo/agility-katas/viewing-csv-files-iii/


- Before we make the BulkRead let's do a CacheAll function
- favoured navigation direction


BulkRead:
i want to read 10 pages at once 
-> 10 time less file access
this should speed up this thing tremendously
the pages should be stored in the cache at is now, so there is no nead to make any changes here.

what to do....

GetPage(1)
ReadFromFile start at line 1, length = 10 x pageLength

GetPage(50)
start = start of (page - bulkpages/2)
ReadFromFile start , length = 10 x pageLength

GetPage(lsatPage)
start = start of (page - bulkpages)
ReadFromFile start , length = 10 x pageLength

first 10 pages  1-10
second 10 pages 11-20
....
last 10 pages 221-...

startPageBlock = ((int)pageNo / BulkPages) * BulkPages + 1

                15 / 10 = 1 * 10 +1 =11
                223 / 10 = 22 * 10 + 1 = 221 OK


what about saving the bulkInfo instead of the pageInfo in the cache?

bulk page: key (from to) value list of strings

bulkCache.Contains(page)
    page.IsBetween(from to)

Cache.Contains(() => function)

return bulkCache.GetPage(page)

the existing components couldn't be cut in the correct way to get a satisfying result

rework this???

make new components and look what stays the same...

UseCases:

SearchPage(pageNo)

GetFromCache

GetFromFile

WriteToCache

UpdateCache for garbage collection





































2020.12.08 Tu (Post-Lockdown day 2 in AT)
=========================================

- Agility Kata “Viewing CSV Files III” resume
    https://ccd-school.de/coding-dojo/agility-katas/viewing-csv-files-iii/


Do some clean up

- switch to .Net 5      DONE

- BulkRead planning









2020.12.07 Mo (Post-Lockdown day 1 in AT)
=========================================

- Agility Kata “Viewing CSV Files III” resume
    https://ccd-school.de/coding-dojo/agility-katas/viewing-csv-files-iii/


.Net Core 3.1 ther is no Threadsafe Collections that is useable in this case
in .Net 5 there is a SyncronizedCollection
we will switch to .Net 5 asap

but we implement an own threadsafe usage for the priority queue temporarely

i like this smart little component
let's do the same with our cache, make this more generic

is there a existing cache in .Net? nope

extract the logger










2020.12.06 Su (Lockdown day 20 in AT, last day tomorrow is the first post lockdown day)
=======================================================================================

Austria is switching back to a kind of soft lockdown
- shops are open again
- 3/4 of schools are open again
- museums...

numbers are still much to high (4x WHO limits)
so what do u expect?
15.12.2020 numbers are going up again slowly...
24.12.2020 christmas, about 3000 new infected each day
    families meet -> much to high numbers in mid January
    nobody wants a 3rd lockdown, so again hesitation
    feb, march 3rd lockdown, again much to late
    each week means double the death 1-> 2-> 4-> 8
    three weeks of hesitation means 8x dead people

    but tommorrow people "play normal" again

so back to the kata

- Agility Kata “Viewing CSV Files III” resume
    https://ccd-school.de/coding-dojo/agility-katas/viewing-csv-files-iii/

    yesterday was a bad hair day
    nothing worked out as planned
    but we need a PriorityQueue
    we have most of the code we need, so no TDD
    just extract existing code, reimplement it and test after








2020.12.05 Sa (Lockdown day 19 in AT)
=====================================

- Agility Kata “Viewing CSV Files III” resume
    https://ccd-school.de/coding-dojo/agility-katas/viewing-csv-files-iii/

ReadAheadAsync(pageNo, pages)    FEX
the app is slow due to multiple file access
this is not necessary, so make this better

clean up

not my day today








2020.12.04 Fr (Lockdown day 18 in AT)
=====================================

- Agility Kata “Viewing CSV Files III” resume
    https://ccd-school.de/coding-dojo/agility-katas/viewing-csv-files-iii/

review what we have done yesterday...

we ended yesterday with an design session not TDD
this was to get ideas out of the head
and as you can see it was pretty straight forward
the one test showed that the ideas are working
there are for sure bugs in there, we will find them on the way...

access it in the viewer...

--------these test shouldn't run parallel -> research
lunch break!

let's do some tests with larger files, just to feel the speed (or slowness)
the reading of the file length takes some time, we will make this better later
estimate maxpages conservative? depending on file size...
nope, we just read the first pages and read the last pages after we know the length...

CachedCsvFileService should be splited up, all the readahead stuff will become a own component
never the less its not that bad
the principles are working
the record numbering must be repaired
and a general clean up is necessary

Coverage:
The moment you leave TDD you loose coverage...
It's still good but we have to work on this...

We have more Test LOC than Production LOC, thats OK and good!


DI:
---
we should introduce DI after this iteration 
the components complexity increases so DI helps
i like DI
some don't
there are people they say it's an antipattern
i don't know, i didn't read there arguments (have to in the future!)

https://clean-code-developer.com/grades/grade-4-green/#Inversion_of_Control_Container










2020.12.03 Th (Lockdown day 17 in AT)
=====================================

- Agility Kata “Viewing CSV Files III” resume
    https://ccd-school.de/coding-dojo/agility-katas/viewing-csv-files-iii/

Now we are prepared to continue with the work that we wanted to do initialy...

    let's update VS
    maybe some strange effects are gone now, i was 3 versions behind at least.

the basics are done, lets continue tomorrow



Collect some ideas:
    
    How should the cache and the FileService work together?
    lets build an CachedFileReader

    if this would be F# we could define this directly as types/modules

    // FEX future extension...

    Components:

    PageInfo
        int Id
        int Priority
        DateTime CreationTime
        DateTime HitTime

    CachedFileReader
        string GetTitleAsync

        ReadFirstPageAsync(s)
        ReadLastPageAsync(s)

    PageCache
        // all methods should be async

        async collection dictionary(PageInfo, page list of strings)

        string list GetPageAsync(pageNo)
        SetPageCacheAsync(pageNo, string list)

        ReadAheadAsync(pageNo)
        ReadAheadAsync(pageNo, pages)    FEX
        IsCachedAsync(pageNo)

    PageCacheSettings
        int PageLength
        int ReadAheadNextPages
        int ReadAheadPrevPages
        int MaxCachedPages
        int BulkReadPages FEX

    PageCacheMaintance
        DeleteOldPagesAsync

    Logging
        I want to know what this thing is doing, debugging is hard in async
        make a simple logger








2020.12.02 We (Lockdown day 16 in AT)
=====================================

- Agility Kata “Viewing CSV Files III” resume
    https://ccd-school.de/coding-dojo/agility-katas/viewing-csv-files-iii/

    fix git 'commit large file' issue!

    https://stackoverflow.com/questions/20002557/how-to-remove-a-too-large-file-in-a-commit-when-my-branch-is-ahead-of-master-by/39768343

    bfg --strip-blobs-bigger-than 50M
    # Git history will be cleaned - files in your latest commit will *not* be touched
    
    f*ck all of this just make a new commit, it's not that important

    DONE
    thats one of the reasons why you should commit often...
    wasted time 30-60 minutes...

    Now we are prepared to continue with the work that we wanted to do initialy...

    but tomorrow...








2020.12.01 Tu (Lockdown day 15 in AT)
=====================================

- Agility Kata “Viewing CSV Files III” 
    https://ccd-school.de/coding-dojo/agility-katas/viewing-csv-files-iii/

    planning:
        - do not read large files at once ( > 10 MB)
        - two strategies to get to the file infos
        - get number of lines (i don't like the "iterate through the file method"...)
            - what possibilities do we have?
            - background process to determine the number of lines -> async/await (love it)      DONE
                async file reader?

    todos:
        - find large(r) logfile for testing 
        - or just blew up a existing csv file -> write a software for this...
            - add record numbers for easier record recognition

        - make IntegrationTests project for such testings, these tests take to long for UnitTests   DONE
        - move existing ServiceTests to a ServiceTests project                                      DONE
        - leave the LearningTest project almost empty                                               DONE

    - now a lot of research have to be done, all of this is new to me...
        Asynchronous streams 

    lunch time!


- Agility Kata “Viewing CSV Files II” 
    https://ccd-school.de/coding-dojo/agility-katas/viewing-csv-files-ii/

    clean up before starting with part 3

    when the core parts of the software are done, TDD goes in the background naturally
    so try to do at least Test-After!


    so there went something terrible wrong ...
    maybe it was a kind of chaotic creation of the branch
    -> this leads to merge conflicts
    -> so never delete your old files to fast!
    -> no chaotic branch creation any more!

    TODO:
    -> check in all             DONE
    -> sync all                 DONE
    -> check both sides         DONE
    -> create new branch        DONE
    -> check on server side     DONE
    -> delete old branches on git after a couple of days...









2020.11.30 Mo (Lockdown day 14 in AT)
=====================================

- Agility Kata “Viewing CSV Files I” ???
    https://ccd-school.de/coding-dojo/agility-katas/viewing-csv-files-i/

    what is still missing?
    read the csv file		DONE
    clean up				DONE
    improvements			DONE

    all of this was tested manualy
    lets switch back to TDD!

    i want [page/of pages] printed				Iteration 2, done
    i want a possibility to sort data
    i want a no data available message
    i want a file not found message
    i want to write my fake csv lines to a file...
    
    i follow the recomendation to _NOT_ read the future iterations...


- lets read iteration 2
    https://ccd-school.de/coding-dojo/agility-katas/viewing-csv-files-ii/
     i think i need a break...
     happy lunch, cat is demanding...

    Each data record should be preceded by a record number.					DONE
    Show which page is displayed out of how many in total below the table.	DONE
    Let the user jump to a page by entering its number.						DONE








2020.11.29 Su (Lockdown day 13 in AT)
=====================================

- Agility Kata “Viewing CSV Files I” ???
    https://ccd-school.de/coding-dojo/agility-katas/viewing-csv-files-i/

lunch break!
Finish!
done for today





2020.11.28 Sa (Lockdown day 12 in AT)
=====================================

- Class Kata „Linked List“ ...
    clean up
    done


    next kata???

    Agility Kata “Viewing CSV Files I” ???
    https://ccd-school.de/coding-dojo/agility-katas/viewing-csv-files-i/

    but...
    tomorrow!!!






2020.11.27 Fr (Lockdown day 11 in AT)
=====================================

- Class Kata „Linked List“ ...

I was completly biased at this topic!
After reading wikipedia about linked lists, i know what i have to do...
so sorry 





2020.11.25 We (Lockdown day 9 in AT)
====================================

- Class Kata „Linked List“ resumed
    the description is kind of missleading 
    i think i will adapt it...





2020.11.24 Tu (Lockdown day 8 in AT)
====================================

- Class Kata „Linked List“ paused





2020.11.23 Mo (Lockdown day 7 in AT)
====================================

resume WordWrap			paused again
theory meets reality...


you can download all of this from github
https://github.com/egreiner/TDD_Katas



2020.11.22 Su (Lockdown day 6 in AT)
====================================

- search a new kata

- Count Characters Kata				DONE
improve this kata


2020.11.21 Sa (Lockdown day 5 in AT)
====================================

- clean up solution
- commit to github (do this from beginning on, didn't thought that this get this big...)

- Kata ChristmasTree	current
    better tests, find errors

i need glasses...




2020.11.19 Th (Lockdown day 3 in AT)
====================================

resume WordWrap			paused



2020.11.18 We (Lockdown day 2 in AT)
====================================

Search for the next kata

start WordWrap			

Kata ToDictionary() DONE



CleanUp
-------

- cleaning up the project
    why? look at the metrics
- split up tests and productive code
    now it's easier to analyze the metrics

    DONE


Last week
=========

Bowling								DONE
RomanNumerals						DONE
CsvTableizer						DONE
HappyNumbers						DONE
Rot13								DONE
RussianPeasantMutliplication		DONE

